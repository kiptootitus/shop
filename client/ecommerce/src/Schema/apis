swagger: '2.0'
info:
  title: E-Commerce API
  description: API documentation for the E-Commerce app
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: tech@techslimited.com
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /:
    get:
      operationId: _list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - ''
    parameters: []
  /activate/{uidb64}/{token}/:
    get:
      operationId: activate_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - activate
    parameters:
    - name: uidb64
      in: path
      required: true
      type: string
    - name: token
      in: path
      required: true
      type: string
  /api/cart-items/:
    get:
      operationId: api_cart-items_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/CartItem'
      tags:
      - api
    post:
      operationId: api_cart-items_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CartItem'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CartItem'
      tags:
      - api
    parameters: []
  /api/cart-items/{id}/:
    get:
      operationId: api_cart-items_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CartItem'
      tags:
      - api
    put:
      operationId: api_cart-items_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CartItem'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CartItem'
      tags:
      - api
    patch:
      operationId: api_cart-items_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CartItem'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CartItem'
      tags:
      - api
    delete:
      operationId: api_cart-items_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this cart item.
      required: true
      type: integer
  /api/messages/:
    get:
      operationId: api_messages_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Message'
      tags:
      - api
    post:
      operationId: api_messages_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Message'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Message'
      tags:
      - api
    parameters: []
  /api/messages/{id}/:
    get:
      operationId: api_messages_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Message'
      tags:
      - api
    put:
      operationId: api_messages_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Message'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Message'
      tags:
      - api
    patch:
      operationId: api_messages_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Message'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Message'
      tags:
      - api
    delete:
      operationId: api_messages_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this message.
      required: true
      type: integer
  /api/orders/:
    get:
      operationId: api_orders_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Order'
      tags:
      - api
    post:
      operationId: api_orders_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Order'
      tags:
      - api
    parameters: []
  /api/orders/{id}/:
    get:
      operationId: api_orders_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'
      tags:
      - api
    put:
      operationId: api_orders_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'
      tags:
      - api
    patch:
      operationId: api_orders_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'
      tags:
      - api
    delete:
      operationId: api_orders_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this order.
      required: true
      type: integer
  /api/payments/:
    get:
      operationId: api_payments_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Payment'
      tags:
      - api
    post:
      operationId: api_payments_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Payment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Payment'
      tags:
      - api
    parameters: []
  /api/payments/{id}/:
    get:
      operationId: api_payments_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Payment'
      tags:
      - api
    put:
      operationId: api_payments_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Payment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Payment'
      tags:
      - api
    patch:
      operationId: api_payments_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Payment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Payment'
      tags:
      - api
    delete:
      operationId: api_payments_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this payment.
      required: true
      type: integer
  /api/products/:
    get:
      operationId: api_products_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Product'
      tags:
      - api
    post:
      operationId: api_products_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - api
    parameters: []
  /api/products/{_id}/:
    get:
      operationId: api_products_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - api
    put:
      operationId: api_products_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - api
    patch:
      operationId: api_products_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Product'
      tags:
      - api
    delete:
      operationId: api_products_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: _id
      in: path
      description: A unique integer value identifying this product.
      required: true
      type: integer
  /api/user-profiles/:
    get:
      operationId: api_user-profiles_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/UserProfile'
      tags:
      - api
    post:
      operationId: api_user-profiles_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - api
    parameters: []
  /api/user-profiles/{id}/:
    get:
      operationId: api_user-profiles_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - api
    put:
      operationId: api_user-profiles_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - api
    patch:
      operationId: api_user-profiles_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserProfile'
      tags:
      - api
    delete:
      operationId: api_user-profiles_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user profile.
      required: true
      type: integer
  /users/:
    get:
      operationId: users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/login/:
    post:
      operationId: users_login_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/MyTokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/MyTokenObtainPair'
      tags:
      - users
    parameters: []
  /users/profile/:
    get:
      operationId: users_profile_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    put:
      operationId: users_profile_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/register/:
    post:
      operationId: users_register_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    parameters: []
definitions:
  Product:
    required:
    - name
    - category
    - price
    type: object
    properties:
      _id:
        title: id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      category:
        title: Category
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        x-nullable: true
      price:
        title: Price
        type: string
        format: decimal
      discount_price:
        title: Discount price
        type: string
        format: decimal
        x-nullable: true
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      product_brand:
        title: Product brand
        type: string
        maxLength: 255
        minLength: 1
      rating:
        title: Rating
        type: string
        format: decimal
        x-nullable: true
      stock_count:
        title: Stock count
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      tags:
        title: Tags
        type: string
        maxLength: 255
        x-nullable: true
      low_stock_threshold:
        title: Low stock threshold
        type: integer
        maximum: 2147483647
        minimum: 0
      variations:
        title: Variations
        type: object
        x-nullable: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      user:
        title: User
        type: integer
        x-nullable: true
  CartItem:
    required:
    - product
    - quantity
    - user
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      product:
        $ref: '#/definitions/Product'
      quantity:
        title: Quantity
        type: integer
        maximum: 2147483647
        minimum: 0
      user:
        title: User
        type: integer
  User:
    required:
    - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      _id:
        title: id
        type: string
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      name:
        title: Name
        type: string
        readOnly: true
      isAdmin:
        title: Isadmin
        type: string
        readOnly: true
  Message:
    required:
    - content
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      sender:
        $ref: '#/definitions/User'
      receiver:
        $ref: '#/definitions/User'
      content:
        title: Content
        type: string
        minLength: 1
      sent_at:
        title: Sent at
        type: string
        format: date-time
        readOnly: true
  Order:
    required:
    - total_amount
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      cart_items:
        type: array
        items:
          $ref: '#/definitions/CartItem'
        readOnly: true
      total_amount:
        title: Total amount
        type: string
        format: decimal
      status:
        title: Status
        type: string
        enum:
        - Pending
        - Shipped
        - Delivered
        - Cancelled
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      shipping_address:
        title: Shipping address
        type: string
        x-nullable: true
      city:
        title: City
        type: string
        maxLength: 100
        x-nullable: true
      zip_code:
        title: Zip code
        type: string
        maxLength: 10
        x-nullable: true
      user:
        title: User
        type: integer
        readOnly: true
  Payment:
    required:
    - order
    - amount
    - payment_method
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      order:
        $ref: '#/definitions/Order'
      amount:
        title: Amount
        type: string
        format: decimal
      payment_method:
        title: Payment method
        type: string
        maxLength: 255
        minLength: 1
      payment_gateway:
        title: Payment gateway
        type: string
        maxLength: 100
        x-nullable: true
      status:
        title: Status
        type: string
        enum:
        - Pending
        - Completed
        - Failed
        readOnly: true
      payment_reference_id:
        title: Payment reference id
        type: string
        maxLength: 255
        x-nullable: true
      paid_at:
        title: Paid at
        type: string
        format: date-time
        readOnly: true
      user:
        title: User
        type: integer
        readOnly: true
  UserProfile:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        $ref: '#/definitions/User'
      address:
        title: Address
        type: string
        maxLength: 255
        x-nullable: true
      city:
        title: City
        type: string
        maxLength: 100
        x-nullable: true
      zip_code:
        title: Zip code
        type: string
        maxLength: 10
        x-nullable: true
      loyalty_points:
        title: Loyalty points
        type: integer
        maximum: 2147483647
        minimum: 0
  MyTokenObtainPair:
    required:
    - username
    - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
